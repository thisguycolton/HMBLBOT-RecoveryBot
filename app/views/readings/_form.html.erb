<%= form_with(model: reading) do |form| %>
  <div class="container-fluid">
    <div class="row">
      <div class="col-lg-4 order-lg-1">
        <% if reading.errors.any? %>
          <div style="color: red">
            <h2><%= pluralize(reading.errors.count, "error") %> prohibited this reading from being saved:</h2>

            <ul>
              <% reading.errors.each do |error| %>
                <li><%= error.full_message %></li>
              <% end %>
            </ul>
          </div>
        <% end %>


        <div class="mb-3">
          <label for="meetingNameInput" class="form-label">Group Name:</label>
          <%= form.text_field :meetingName, id: "meetingNameInput", class: "form-control" %>
        </div>

        <div class="mb-3">
          <label for="meetingURLInput" class="form-label">Meeting URL:</label>
          <%= form.text_field :meetingUrl, id: "meetingURLInput", class: "form-control" %>
        </div>

        <div class="mb-3">
          <label for="meetingDateInput" class="form-label">Date of Meeting:</label>
          <div class="input-group date" data-date-format="mm/dd/yyyy" data-date="04/10/1955">
            <%= form.date_field :meetingDate, id: "meetingDateInput", class: "form-control"  %>
          </div>
        </div>
        <div class="mb-3">
          <label for="meetingTimeInput" class="form-label">Time of Meeting:</label>
          <div class="timepicker input-group">
            <select class="hour form-control" name="reading[hour]">
              <%= options_for_select((1..12).to_a, reading.meetingTime ? reading.meetingTime.strftime('%l').to_i : nil) %>
            </select>
            <span class="colon input-group-text fw-bold">:</span>
            <select class="minute form-control" name="reading[minute]" >
              <%= options_for_select(['00', '15', '30', '45'], reading.meetingTime ? reading.meetingTime.strftime('%M').to_i : nil) %>
            </select>
            <select class="meridiem form-control" name="reading[meridiem]" >
              <%= options_for_select(['AM', 'PM'], reading.meetingTime ? reading.meetingTime.strftime('%p') : nil) %>
            </select>
            <span class="input-group-text px-3"><i class="bi bi-clock"></i></span>
          </div>
        </div>

        <div class="mb-3">
          <label for="hostInput" class="form-label">Host:</label>
          <%= form.text_field :host, id: "hostInput", class: "form-control" %>
        </div>
      </div>
      <div class="col-lg-8 order-lg-0">
        <div class="toolbar w-100"></div>
        <div class="mb-0">
          <label for="meetingURLInput" class="form-label">Reading Title:</label>
          <%= form.text_field :title, class: "form-control rounded-0" %>
        </div>
        <div class="mb-3">
          <%= form.label :content, class: "form-label" %><br>
          <%= form.text_field :content, class: "editor w-100"  %>
          <div >

          </div>
        </div>

        <div class="mb-3">
          <%= form.label :source, class: "form-label" %>
          <%= form.text_field :source, class: "form-control" %>
        </div>

        <div class="mb-3">
          <%= form.label :topic, class: "form-label" %>
          <%= form.text_area :topic, class: "tinymce2", rows: 10  %>
        </div>

        <%= form.hidden_field :user_id, value: current_user.id %>

        <div class="mb-3">
          <%= button_tag(class: "btn btn-success btn-lg w-100") do %>
            <i class="bi bi-floppy fs-4 pe-3 align-baseline"></i>
            <span class="align-text-bottom ps-2 fw-normal tracking-widest">SAVE READING</span>
          <% end %>
        </div>
      </div>
    </div>
  </div>
<% end %>
<script src="https://cdn.quilljs.com/1.0.0/quill.js"></script>
<script>
        var rawUndo = '<svg fill="#000000" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path class="ql-fill" d="M9,16 C9.85216986,16 10.2974338,15.0144864 9.78322518,14.3774732 L9.70710678,14.2928932 L7.41602684,12.0006549 C8.6852851,10.797551 10.6983085,10 13,10 C16.918278,10 20,12.3112915 20,15 C20,15.5522847 20.4477153,16 21,16 C21.5522847,16 22,15.5522847 22,15 C22,11.0612915 17.918278,8 13,8 C10.1933072,8 7.65904665,8.99693838 6.00030879,10.5849581 L3.70710678,8.29289322 C3.1045317,7.69031813 2.09281919,8.07233231 2.00598327,8.88636906 L2,9 L2,15 C2,15.5128358 2.38604019,15.9355072 2.88337887,15.9932723 L3,16 L9,16 Z"/></svg>';

        var toolbarOptions = [
          ['bold', 'italic', 'underline', 'strike'],        // toggled buttons
          ['blockquote', 'code-block'],
          ['link'],
          //[{ 'header': 1 }, { 'header': 2 }],               // custom button values
          [{ 'list': 'ordered'}, { 'list': 'bullet' }],
          //[{ 'script': 'sub'}, { 'script': 'super' }],      // superscript/subscript
          [{ 'indent': '-1'}, { 'indent': '+1' }],          // outdent/indent
          [{ 'direction': 'rtl' }],                         // text direction
          //[{ 'size': ['small', false, 'large', 'huge'] }],  // custom dropdown
          //[{ 'header': [1, 2, 3, 4, 5, 6, false] }],
          //[{ 'color': [] }, { 'background': [] }],          // dropdown with defaults from theme
          //[{ 'font': [] }],
          [{ 'align': [] }],
          ['clean']                                        // remove formatting button
        ];

        var additionalToolbarOptions = [
          ['undo','redo']
        ];
    var quill = new Quill('.editor', {
      modules: {
        history: {
          delay: 1000,
          userOnly: false
        },
        toolbar: {
          container: toolbarOptions.concat(additionalToolbarOptions),
                handlers: {
                undo: (value) => {
                  this.quill.history.undo();
                },
                redo: (value) => {
                  this.quill.history.redo();
                }
              },
        },
      },
      placeholder: 'Compose an epic...',
      theme: 'snow'  // or 'bubble'
    });

    var form = document.querySelector('form');
    form.onsubmit = function() {
      // Populate hidden form on submit
      var about = document.querySelector('name="reading[content]"');
      about.value = JSON.stringify(quill.getContents());
      
      console.log("Submitted", $(form).serialize(), $(form).serializeArray());
      
      // No back end to actually submit to!
      alert('ERROR!')
      return false;
    };
  document.querySelector('.ql-undo').innerHTML = rawUndo;


</script>